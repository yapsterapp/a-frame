{:linters {:unresolved-symbol {:exclude [(malli.core/=>)]},
           :type-mismatch {:namespaces {promisespromises.stream.cross-impl {cross {:arities {2 {:args [{:op :keys,
                                                                                                        :opt {:promisespromises.stream.cross/key-comparator :fn,
                                                                                                              :promisespromises.stream.cross/product-sort :fn,
                                                                                                              :promisespromises.stream.cross.op.n-left-join/n :int,
                                                                                                              :promisespromises.stream.cross/finalizer :fn,
                                                                                                              :promisespromises.stream.cross/target-chunk-size :int},
                                                                                                        :req {:promisespromises.stream.cross/keys {:op :rest,
                                                                                                                                                   :spec [:keyword
                                                                                                                                                          :any]},
                                                                                                              :promisespromises.stream.cross/op :keyword}}
                                                                                                       :any],
                                                                                                :ret :any}}}},
                                        a-frame.interceptor-chain {initiate {:arities {4 {:args [:any
                                                                                                 :any
                                                                                                 :sequential
                                                                                                 :any],
                                                                                          :ret {:op :keys,
                                                                                                :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                :req {:a-frame/app-ctx :any,
                                                                                                      :a-frame/router :any,
                                                                                                      :a-frame.interceptor-chain/queue :vector,
                                                                                                      :a-frame.interceptor-chain/stack :sequential,
                                                                                                      :a-frame.interceptor-chain/history :vector}}}}},
                                                                   leave-all {:arities {1 {:args [{:op :keys,
                                                                                                   :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                   :req {:a-frame/app-ctx :any,
                                                                                                         :a-frame/router :any,
                                                                                                         :a-frame.interceptor-chain/queue :vector,
                                                                                                         :a-frame.interceptor-chain/stack :sequential,
                                                                                                         :a-frame.interceptor-chain/history :vector}}],
                                                                                           :ret :any}}},
                                                                   assoc-opaque-keys {:arities {3 {:args [:any
                                                                                                          :any
                                                                                                          :any],
                                                                                                   :ret :any}}},
                                                                   leave-next {:arities {1 {:args [{:op :keys,
                                                                                                    :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                    :req {:a-frame/app-ctx :any,
                                                                                                          :a-frame/router :any,
                                                                                                          :a-frame.interceptor-chain/queue :vector,
                                                                                                          :a-frame.interceptor-chain/stack :sequential,
                                                                                                          :a-frame.interceptor-chain/history :vector}}],
                                                                                            :ret :any}}},
                                                                   enter-all {:arities {1 {:args [{:op :keys,
                                                                                                   :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                   :req {:a-frame/app-ctx :any,
                                                                                                         :a-frame/router :any,
                                                                                                         :a-frame.interceptor-chain/queue :vector,
                                                                                                         :a-frame.interceptor-chain/stack :sequential,
                                                                                                         :a-frame.interceptor-chain/history :vector}}],
                                                                                           :ret :any}}},
                                                                   execute* {:arities {1 {:args [{:op :keys,
                                                                                                  :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                  :req {:a-frame/app-ctx :any,
                                                                                                        :a-frame/router :any,
                                                                                                        :a-frame.interceptor-chain/queue :vector,
                                                                                                        :a-frame.interceptor-chain/stack :sequential,
                                                                                                        :a-frame.interceptor-chain/history :vector}}],
                                                                                          :ret :any},
                                                                                       3 {:args [:any
                                                                                                 :any
                                                                                                 {:op :keys,
                                                                                                  :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                  :req {:a-frame/app-ctx :any,
                                                                                                        :a-frame/router :any,
                                                                                                        :a-frame.interceptor-chain/queue :vector,
                                                                                                        :a-frame.interceptor-chain/stack :sequential,
                                                                                                        :a-frame.interceptor-chain/history :vector}}],
                                                                                          :ret :any}}},
                                                                   terminate {:arities {1 {:args [{:op :keys,
                                                                                                   :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                   :req {:a-frame/app-ctx :any,
                                                                                                         :a-frame/router :any,
                                                                                                         :a-frame.interceptor-chain/queue :vector,
                                                                                                         :a-frame.interceptor-chain/stack :sequential,
                                                                                                         :a-frame.interceptor-chain/history :vector}}],
                                                                                           :ret {:op :keys,
                                                                                                 :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                 :req {:a-frame/app-ctx :any,
                                                                                                       :a-frame/router :any,
                                                                                                       :a-frame.interceptor-chain/queue :vector,
                                                                                                       :a-frame.interceptor-chain/stack :sequential,
                                                                                                       :a-frame.interceptor-chain/history :vector}}}}},
                                                                   register-interceptor {:arities {2 {:args [:keyword
                                                                                                             {:op :keys,
                                                                                                              :opt {:a-frame.interceptor-chain/name :keyword,
                                                                                                                    :a-frame.interceptor-chain/enter :fn,
                                                                                                                    :a-frame.interceptor-chain/leave :fn,
                                                                                                                    :a-frame.interceptor-chain/error :fn}}],
                                                                                                      :ret :any}}},
                                                                   clear-errors {:arities {1 {:args [{:op :keys,
                                                                                                      :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                      :req {:a-frame/app-ctx :any,
                                                                                                            :a-frame/router :any,
                                                                                                            :a-frame.interceptor-chain/queue :vector,
                                                                                                            :a-frame.interceptor-chain/stack :sequential,
                                                                                                            :a-frame.interceptor-chain/history :vector}}],
                                                                                              :ret {:op :keys,
                                                                                                    :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                    :req {:a-frame/app-ctx :any,
                                                                                                          :a-frame/router :any,
                                                                                                          :a-frame.interceptor-chain/queue :vector,
                                                                                                          :a-frame.interceptor-chain/stack :sequential,
                                                                                                          :a-frame.interceptor-chain/history :vector}}}}},
                                                                   enter-next {:arities {1 {:args [{:op :keys,
                                                                                                    :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                    :req {:a-frame/app-ctx :any,
                                                                                                          :a-frame/router :any,
                                                                                                          :a-frame.interceptor-chain/queue :vector,
                                                                                                          :a-frame.interceptor-chain/stack :sequential,
                                                                                                          :a-frame.interceptor-chain/history :vector}}],
                                                                                            :ret :any}}},
                                                                   execute {:arities {4 {:args [:any
                                                                                                :any
                                                                                                :sequential
                                                                                                :any],
                                                                                         :ret :any}}},
                                                                   enqueue {:arities {2 {:args [{:op :keys,
                                                                                                 :opt {:a-frame.interceptor-chain/errors :any},
                                                                                                 :req {:a-frame/app-ctx :any,
                                                                                                       :a-frame/router :any,
                                                                                                       :a-frame.interceptor-chain/queue :vector,
                                                                                                       :a-frame.interceptor-chain/stack :sequential,
                                                                                                       :a-frame.interceptor-chain/history :vector}}
                                                                                                :sequential],
                                                                                         :ret {:op :keys,
                                                                                               :opt {:a-frame.interceptor-chain/errors :any},
                                                                                               :req {:a-frame/app-ctx :any,
                                                                                                     :a-frame/router :any,
                                                                                                     :a-frame.interceptor-chain/queue :vector,
                                                                                                     :a-frame.interceptor-chain/stack :sequential,
                                                                                                     :a-frame.interceptor-chain/history :vector}}}}}},
                                        a-frame.events {coerce-event-options {:arities {1 {:args [:any], :ret :any}}}},
                                        a-frame.router {stop-a-frame-router {:arities {1 {:args [{:op :keys,
                                                                                                  :opt {:a-frame.router/executor :any,
                                                                                                        :a-frame.router/buffer-size :int},
                                                                                                  :req {:a-frame/app-ctx :map,
                                                                                                        :a-frame.router/event-stream :fn,
                                                                                                        :a-frame.router/global-interceptors-a :any}}],
                                                                                          :ret :any}}},
                                                        dispatch-n-sync {:arities {2 {:args [{:op :keys,
                                                                                              :opt {:a-frame.router/executor :any,
                                                                                                    :a-frame.router/buffer-size :int},
                                                                                              :req {:a-frame/app-ctx :map,
                                                                                                    :a-frame.router/event-stream :fn,
                                                                                                    :a-frame.router/global-interceptors-a :any}}
                                                                                             :any],
                                                                                      :ret :any}}},
                                                        dispatch-sync {:arities {2 {:args [{:op :keys,
                                                                                            :opt {:a-frame.router/executor :any,
                                                                                                  :a-frame.router/buffer-size :int},
                                                                                            :req {:a-frame/app-ctx :map,
                                                                                                  :a-frame.router/event-stream :fn,
                                                                                                  :a-frame.router/global-interceptors-a :any}}
                                                                                           :any],
                                                                                    :ret :any}}},
                                                        create-router {:arities {:varargs {:args [:any :any],
                                                                                           :ret {:op :keys,
                                                                                                 :opt {:a-frame.router/executor :any,
                                                                                                       :a-frame.router/buffer-size :int},
                                                                                                 :req {:a-frame/app-ctx :map,
                                                                                                       :a-frame.router/event-stream :fn,
                                                                                                       :a-frame.router/global-interceptors-a :any}},
                                                                                           :min-arity 1}}},
                                                        handle-event {:arities {3 {:args [{:op :keys,
                                                                                           :opt {:a-frame.router/executor :any,
                                                                                                 :a-frame.router/buffer-size :int},
                                                                                           :req {:a-frame/app-ctx :map,
                                                                                                 :a-frame.router/event-stream :fn,
                                                                                                 :a-frame.router/global-interceptors-a :any}}
                                                                                          :boolean
                                                                                          {:op :keys,
                                                                                           :opt {:a-frame.event/init-coeffects :map,
                                                                                                 :a-frame.event/transitive-coeffects? :boolean,
                                                                                                 :a-frame.event/modify-interceptor-chain :fn},
                                                                                           :req {:a-frame/event {:op :keys,
                                                                                                                 :req {:a-frame/id :keyword}}}}],
                                                                                   :ret :any}}},
                                                        dispatch {:arities {2 {:args [{:op :keys,
                                                                                       :opt {:a-frame.router/executor :any,
                                                                                             :a-frame.router/buffer-size :int},
                                                                                       :req {:a-frame/app-ctx :map,
                                                                                             :a-frame.router/event-stream :fn,
                                                                                             :a-frame.router/global-interceptors-a :any}}
                                                                                      :any],
                                                                               :ret :any}}},
                                                        run-a-frame-router {:arities {1 {:args [{:op :keys,
                                                                                                 :opt {:a-frame.router/executor :any,
                                                                                                       :a-frame.router/buffer-size :int},
                                                                                                 :req {:a-frame/app-ctx :map,
                                                                                                       :a-frame.router/event-stream :fn,
                                                                                                       :a-frame.router/global-interceptors-a :any}}],
                                                                                         :ret :any}}},
                                                        handle-event-stream {:arities {1 {:args [{:op :keys,
                                                                                                  :opt {:a-frame.router/executor :any,
                                                                                                        :a-frame.router/buffer-size :int},
                                                                                                  :req {:a-frame/app-ctx :map,
                                                                                                        :a-frame.router/event-stream :fn,
                                                                                                        :a-frame.router/global-interceptors-a :any}}],
                                                                                          :ret :any}}},
                                                        dispatch-n* {:arities {:varargs {:args [{:op :keys,
                                                                                                 :opt {:a-frame.router/executor :any,
                                                                                                       :a-frame.router/buffer-size :int},
                                                                                                 :req {:a-frame/app-ctx :map,
                                                                                                       :a-frame.router/event-stream :fn,
                                                                                                       :a-frame.router/global-interceptors-a :any}}
                                                                                                {:op :rest, :spec :any}],
                                                                                         :ret :any,
                                                                                         :min-arity 2}}},
                                                        handle-sync-event-stream {:arities {1 {:args [{:op :keys,
                                                                                                       :opt {:a-frame.router/executor :any,
                                                                                                             :a-frame.router/buffer-size :int},
                                                                                                       :req {:a-frame/app-ctx :map,
                                                                                                             :a-frame.router/event-stream :fn,
                                                                                                             :a-frame.router/global-interceptors-a :any}}],
                                                                                               :ret :any}}}},
                                        a-frame.fx {dispatch {:arities {:varargs {:args [:any :any],
                                                                                  :ret :any,
                                                                                  :min-arity 1}}},
                                                    dispatch-n {:arities {:varargs {:args [:any {:op :rest, :spec :any}],
                                                                                    :ret :any,
                                                                                    :min-arity 1}}},
                                                    dispatch-sync {:arities {:varargs {:args [:any :any],
                                                                                       :ret :any,
                                                                                       :min-arity 1}}},
                                                    dispatch-n-sync {:arities {:varargs {:args [:any
                                                                                                {:op :rest, :spec :any}],
                                                                                         :ret :any,
                                                                                         :min-arity 1}}}}}}}}
